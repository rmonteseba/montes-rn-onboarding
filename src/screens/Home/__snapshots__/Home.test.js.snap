// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should match the snapshot 1`] = `
<RCTScrollView
  collapsable={false}
  handlerTag={15}
  handlerType="NativeViewGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  waitFor={
    Array [
      Object {
        "current": null,
      },
    ]
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View>
        <View>
          <View
            collapsable={false}
            handlerTag={16}
            handlerType="PanGestureHandler"
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "height": 450,
                  "width": 750,
                },
                Array [
                  Object {
                    "height": 450,
                    "width": 750,
                  },
                  undefined,
                ],
                Object {
                  "flexDirection": "row",
                },
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "alignSelf": "center",
              "bottom": -45,
              "display": "flex",
              "flexDirection": "row",
              "position": "absolute",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={17}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 50,
                  }
                }
              >
                <SvgMock
                  height={40}
                  width={40}
                />
                <Text
                  style={
                    Object {
                      "paddingVertical": 16,
                    }
                  }
                >
                  My List
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={18}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 50,
                  }
                }
              >
                <SvgMock
                  height={40}
                  width={40}
                />
                <Text
                  style={
                    Object {
                      "paddingVertical": 16,
                    }
                  }
                >
                  Play
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={19}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            testID="movie-detail-btn"
            touchSoundDisabled={false}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 50,
                  }
                }
              >
                <SvgMock
                  height={40}
                  width={40}
                />
                <Text
                  style={
                    Object {
                      "paddingVertical": 16,
                    }
                  }
                >
                  Info
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View>
        <Text
          style={
            Array [
              Object {
                "fontSize": 25,
                "fontWeight": "bold",
                "marginLeft": 40,
                "marginVertical": 15,
              },
              undefined,
            ]
          }
        >
          Popular Movies
        </Text>
        <View
          collapsable={false}
          handlerTag={20}
          handlerType="PanGestureHandler"
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "height": 180,
                "width": 188,
              },
              Array [
                Object {
                  "height": 180,
                  "width": 750,
                },
                Object {
                  "marginHorizontal": 20,
                },
              ],
              Object {
                "flexDirection": "row",
              },
            ]
          }
        />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "fontSize": 25,
                "fontWeight": "bold",
                "marginLeft": 40,
                "marginVertical": 15,
              },
              undefined,
            ]
          }
        >
          Top Featured
        </Text>
        <View
          collapsable={false}
          handlerTag={21}
          handlerType="PanGestureHandler"
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "height": 180,
                "width": 188,
              },
              Array [
                Object {
                  "height": 180,
                  "width": 750,
                },
                Object {
                  "marginHorizontal": 20,
                },
              ],
              Object {
                "flexDirection": "row",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Home should show the movie list of the main carousel 1`] = `
<RCTScrollView
  collapsable={false}
  handlerTag={1}
  handlerType="NativeViewGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  waitFor={
    Array [
      Object {
        "current": null,
      },
    ]
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View>
        <View>
          <View
            collapsable={false}
            handlerTag={2}
            handlerType="PanGestureHandler"
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "height": 450,
                  "width": 750,
                },
                Array [
                  Object {
                    "height": 450,
                    "width": 750,
                  },
                  undefined,
                ],
                Object {
                  "flexDirection": "row",
                },
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "alignSelf": "center",
              "bottom": -45,
              "display": "flex",
              "flexDirection": "row",
              "position": "absolute",
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={3}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 50,
                  }
                }
              >
                <SvgMock
                  height={40}
                  width={40}
                />
                <Text
                  style={
                    Object {
                      "paddingVertical": 16,
                    }
                  }
                >
                  My List
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={4}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 50,
                  }
                }
              >
                <SvgMock
                  height={40}
                  width={40}
                />
                <Text
                  style={
                    Object {
                      "paddingVertical": 16,
                    }
                  }
                >
                  Play
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
          <RNGestureHandlerButton
            collapsable={false}
            delayLongPress={600}
            enabled={true}
            exclusive={true}
            handlerTag={5}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            testID="movie-detail-btn"
            touchSoundDisabled={false}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 50,
                  }
                }
              >
                <SvgMock
                  height={40}
                  width={40}
                />
                <Text
                  style={
                    Object {
                      "paddingVertical": 16,
                    }
                  }
                >
                  Info
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <View>
        <Text
          style={
            Array [
              Object {
                "fontSize": 25,
                "fontWeight": "bold",
                "marginLeft": 40,
                "marginVertical": 15,
              },
              undefined,
            ]
          }
        >
          Popular Movies
        </Text>
        <View
          collapsable={false}
          handlerTag={6}
          handlerType="PanGestureHandler"
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "height": 180,
                "width": 188,
              },
              Array [
                Object {
                  "height": 180,
                  "width": 750,
                },
                Object {
                  "marginHorizontal": 20,
                },
              ],
              Object {
                "flexDirection": "row",
              },
            ]
          }
        />
      </View>
      <View>
        <Text
          style={
            Array [
              Object {
                "fontSize": 25,
                "fontWeight": "bold",
                "marginLeft": 40,
                "marginVertical": 15,
              },
              undefined,
            ]
          }
        >
          Top Featured
        </Text>
        <View
          collapsable={false}
          handlerTag={7}
          handlerType="PanGestureHandler"
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "height": 180,
                "width": 188,
              },
              Array [
                Object {
                  "height": 180,
                  "width": 750,
                },
                Object {
                  "marginHorizontal": 20,
                },
              ],
              Object {
                "flexDirection": "row",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
